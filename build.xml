This XML file does not appear to have any style information associated with it. The document tree is shown below.
<project name="Humweb.Validation" default="build">
<target name="build" depends="prepare,composer,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit"/>
<target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit"/>
<target name="tools-parallel" description="Run tools in parallel">
<parallel threadCount="2">
<sequential>
<antcall target="pdepend"/>
<antcall target="phpmd-ci"/>
</sequential>
<sequential>...</sequential>
<antcall target="phpcpd"/>
<antcall target="phpcs-ci"/>
<antcall target="phploc"/>
<antcall target="phpdox"/>
</parallel>
<parallel threadCount="2">...</parallel>
</target>
<target name="tools-parallel" description="Run tools in parallel">...</target>
<target name="composer" description="Installing dependencies">
<exec executable="wget" failonerror="true">
<arg value="-nc"/>
<arg value="http://getcomposer.org/composer.phar"/>
</exec>
<exec executable="wget" failonerror="true">...</exec>
<exec executable="php" failonerror="true">
<arg value="composer.phar"/>
<arg value="install"/>
<!--
# Use the lockfile versions only, if it exists (fall back to .json)
-->
<!--...-->
<arg value="--dev"/>
<!-- includes mockery and all the other QA-tools -->
<arg value="--prefer-dist"/>
<!-- ## download/cache a local .zip file for use -->
<arg value="--no-progress"/>
<!-- arg value="- -install-suggests" / -->
<!--
arg value="- -optimize-autoloader" / ## we don't usually optimise deployment
-->
<!--...-->
</exec>
<exec executable="php" failonerror="true">...</exec>
<exec executable="php" failonerror="true">
<arg value="composer.phar"/>
<arg value="update"/>
</exec>
<exec executable="php" failonerror="true">...</exec>
</target>
<target name="composer" description="Installing dependencies">...</target>
<target name="clean" description="Cleanup build artifacts">
<delete dir="${basedir}/build/api"/>
<delete dir="${basedir}/build/coverage"/>
<delete dir="${basedir}/build/logs"/>
<delete dir="${basedir}/build/pdepend"/>
</target>
<target name="clean" description="Cleanup build artifacts">...</target>
<target name="prepare" depends="clean" description="Prepare for build">
<mkdir dir="${basedir}/build/api"/>
<mkdir dir="${basedir}/build/coverage"/>
<mkdir dir="${basedir}/build/logs"/>
<mkdir dir="${basedir}/build/pdepend"/>
<mkdir dir="${basedir}/build/phpdox"/>
</target>
<target name="prepare" depends="clean" description="Prepare for build">...</target>
<target name="lint" description="Perform syntax check of sourcecode files">
<apply executable="php" failonerror="true">
<arg value="-l"/>
<fileset dir="${basedir}/src">
<include name="**/*.php"/>
<modified/>
</fileset>
<fileset dir="${basedir}/src">...</fileset>
<fileset dir="${basedir}/tests">
<include name="**/*.php"/>
<modified/>
</fileset>
<fileset dir="${basedir}/tests">...</fileset>
</apply>
<apply executable="php" failonerror="true">...</apply>
</target>
<target name="lint" description="Perform syntax check of sourcecode files">...</target>
<target name="phploc" description="Measure project size using PHPLOC">
<exec executable="/usr/local/bin/phploc">
<arg value="--count-tests"/>
<arg value="--log-csv"/>
<arg value="${basedir}/build/logs/phploc.csv"/>
<arg path="${basedir}/src"/>
</exec>
<exec executable="/usr/local/bin/phploc">...</exec>
</target>
<target name="phploc" description="Measure project size using PHPLOC">...</target>
<target name="pdepend" description="Calculate software metrics using PHP_Depend">
<exec executable="pdepend">
<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
<arg path="${basedir}/src"/>
</exec>
<exec executable="pdepend">...</exec>
</target>
<target name="pdepend" description="Calculate software metrics using PHP_Depend">...</target>
<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
<exec executable="phpmd">
<arg path="${basedir}/src"/>
<arg value="text"/>
<arg value="${basedir}/build/phpmd.xml"/>
</exec>
<exec executable="phpmd">...</exec>
</target>
<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">...</target>
<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
<exec executable="phpmd">
<arg path="${basedir}/src"/>
<arg value="xml"/>
<arg value="${basedir}/build/phpmd.xml"/>
<arg value="--reportfile"/>
<arg value="${basedir}/build/logs/pmd.xml"/>
</exec>
<exec executable="phpmd">...</exec>
</target>
<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">...</target>
<target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
<exec executable="phpcs">
<arg value="--standard=${basedir}/build/phpcs.xml"/>
<arg path="${basedir}/src"/>
</exec>
<exec executable="phpcs">...</exec>
</target>
<target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">...</target>
<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
<exec executable="phpcs" output="/dev/null">
<arg value="--report=checkstyle"/>
<arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
<arg value="--standard=${basedir}/build/phpcs.xml"/>
<arg path="${basedir}/src"/>
</exec>
<exec executable="phpcs" output="/dev/null">...</exec>
</target>
<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">...</target>
<target name="phpcpd" description="Find duplicate code using PHPCPD">
<exec executable="phpcpd">
<arg value="--log-pmd"/>
<arg value="${basedir}/build/logs/pmd-cpd.xml"/>
<arg path="${basedir}/src"/>
</exec>
<exec executable="phpcpd">...</exec>
</target>
<target name="phpcpd" description="Find duplicate code using PHPCPD">...</target>
<target name="phpdox" description="Generate API documentation using phpDox">
<exec executable="/usr/local/bin/phpdox"/>
</target>
<target name="phpdox" description="Generate API documentation using phpDox">...</target>
<target name="phpunit" description="Run unit tests with PHPUnit">
<exec executable="phpunit" failonerror="true"/>
</target>
<target name="phpunit" description="Run unit tests with PHPUnit">...</target>
</project>
<project name="Humweb.Module" default="build">...</project>
